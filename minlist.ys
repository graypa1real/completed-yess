.pos 0
irmovq stack, %rsp
irmovq list, %rdi
call minList
halt
#
# minList: return the minimum value of the elements of a NULL terminated list
# parameter: %rdi contains the value list, which
#            is the adress of the first element in the list
# return: %rax contains the minimum value in the list

minList: irmovq $8, %r8
mrmovq (%rdi), %rcx
rrmovq %rcx, %rax #put the first num in %rax
addq %r8, %rdi #get next number
andq %rcx, %rcx
jne loop #jump back if not equal to 0
ret
loop:   mrmovq (%rdi), %rcx
addq %r8, %rdi #get next number
andq %rcx, %rcx
je done
rrmovq %rcx, %r10
subq %rax, %r10
cmovl %rcx, %rax
jmp loop
done: ret
.align 8
list:    .quad 22
.quad 53
.quad -7
.quad 1
.quad -2
.quad 42
.quad -5
.quad 0  #indicates the end of the list
#
.pos 0x200
stack:
